---
// Appointment Dashboard Component
---

<div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
  <div class="bg-white dark:bg-slate-800 rounded-xl shadow-2xl max-w-7xl w-full mx-4 max-h-[90vh] overflow-y-auto">
    <!-- Header -->
    <div class="flex justify-between items-center p-6 border-b border-green-200 dark:border-green-700">
      <div>
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white">ðŸ“… Appointment Dashboard</h2>
        <p class="text-gray-600 dark:text-gray-400">View and manage all consultation bookings</p>
      </div>
      <button
        onclick="closeAppointmentDashboard()"
        class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-200 text-2xl font-bold"
      >
        Ã—
      </button>
    </div>

    <!-- Content -->
    <div class="p-6">
      <!-- Quick Stats -->
      <div class="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
        <div class="bg-yellow-50 dark:bg-yellow-900/20 rounded-lg p-4 border border-yellow-200 dark:border-yellow-700">
          <div class="text-center">
            <div class="text-2xl font-bold text-yellow-600 dark:text-yellow-400" id="pending-count">0</div>
            <div class="text-sm text-yellow-700 dark:text-yellow-300">Pending</div>
          </div>
        </div>
        <div class="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-4 border border-blue-200 dark:border-blue-700">
          <div class="text-center">
            <div class="text-2xl font-bold text-blue-600 dark:text-blue-400" id="confirmed-count">0</div>
            <div class="text-sm text-blue-700 dark:text-blue-300">Confirmed</div>
          </div>
        </div>
        <div class="bg-green-50 dark:bg-green-900/20 rounded-lg p-4 border border-green-200 dark:border-green-700">
          <div class="text-center">
            <div class="text-2xl font-bold text-green-600 dark:text-green-400" id="completed-count">0</div>
            <div class="text-sm text-green-700 dark:text-green-300">Completed</div>
          </div>
        </div>
        <div class="bg-red-50 dark:bg-red-900/20 rounded-lg p-4 border border-red-200 dark:border-red-700">
          <div class="text-center">
            <div class="text-2xl font-bold text-red-600 dark:text-red-400" id="cancelled-count">0</div>
            <div class="text-sm text-red-700 dark:text-red-300">Cancelled</div>
          </div>
        </div>
      </div>

      <!-- Filters -->
      <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4 mb-6">
        <div class="grid grid-cols-1 md:grid-cols-4 gap-4">
          <div>
            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Status Filter</label>
            <select
              id="status-filter"
              class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-slate-700 dark:text-white"
            >
              <option value="">All Status</option>
              <option value="pending">Pending</option>
              <option value="confirmed">Confirmed</option>
              <option value="completed">Completed</option>
              <option value="cancelled">Cancelled</option>
            </select>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Service Filter</label>
            <select
              id="service-filter"
              class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-slate-700 dark:text-white"
            >
              <option value="">All Services</option>
              <option value="Astrology Consultation">Astrology Consultation</option>
              <option value="Numerology">Numerology</option>
              <option value="Palmistry">Palmistry</option>
              <option value="Gemstone Consultation">Gemstone Consultation</option>
              <option value="Spiritual Guidance">Spiritual Guidance</option>
            </select>
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Date From</label>
            <input
              type="date"
              id="date-from"
              class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-slate-700 dark:text-white"
            />
          </div>
          <div>
            <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Date To</label>
            <input
              type="date"
              id="date-to"
              class="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-slate-700 dark:text-white"
            />
          </div>
        </div>
        <div class="mt-4 flex space-x-2">
          <button
            onclick="applyFilters()"
            class="bg-green-600 hover:bg-green-700 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-200"
          >
            Apply Filters
          </button>
          <button
            onclick="clearFilters()"
            class="bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors duration-200"
          >
            Clear Filters
          </button>
        </div>
      </div>

      <!-- Appointments List -->
      <div>
        <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Appointments</h3>
        <div class="bg-gray-50 dark:bg-gray-700 rounded-lg p-4">
          <div class="space-y-4" id="appointments-list">
            <!-- Appointments will be loaded here -->
            <div class="text-center text-gray-500 dark:text-gray-400 py-8">
              <span class="text-4xl">ðŸ“…</span>
              <p class="mt-2">Loading appointments...</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // Appointment Dashboard JavaScript
  let appointments = [
    {
      id: 1,
      name: "Priya Sharma",
      email: "priya@example.com",
      phone: "+91 98765 43210",
      service: "Astrology Consultation",
      date: "2024-01-20",
      time: "10:00 AM",
      status: "pending",
      message: "I need guidance on career decisions and want to understand my planetary positions."
    },
    {
      id: 2,
      name: "Rajesh Kumar",
      email: "rajesh@example.com",
      phone: "+91 87654 32109",
      service: "Numerology",
      date: "2024-01-21",
      time: "2:00 PM",
      status: "confirmed",
      message: "Interested in understanding my life path number and its significance."
    },
    {
      id: 3,
      name: "Anjali Patel",
      email: "anjali@example.com",
      phone: "+91 76543 21098",
      service: "Palmistry",
      date: "2024-01-19",
      time: "11:00 AM",
      status: "completed",
      message: "Want to know about my future through palm reading."
    },
    {
      id: 4,
      name: "Vikram Singh",
      email: "vikram@example.com",
      phone: "+91 65432 10987",
      service: "Gemstone Consultation",
      date: "2024-01-22",
      time: "3:00 PM",
      status: "cancelled",
      message: "Need advice on which gemstones would be beneficial for me."
    }
  ];

  let filteredAppointments = [...appointments];

  // Load appointments
  function loadAppointments() {
    updateCounts();
    displayAppointments();
  }

  // Update counts
  function updateCounts() {
    const pendingCount = appointments.filter(a => a.status === 'pending').length;
    const confirmedCount = appointments.filter(a => a.status === 'confirmed').length;
    const completedCount = appointments.filter(a => a.status === 'completed').length;
    const cancelledCount = appointments.filter(a => a.status === 'cancelled').length;

    const pendingElement = document.getElementById('pending-count');
    const confirmedElement = document.getElementById('confirmed-count');
    const completedElement = document.getElementById('completed-count');
    const cancelledElement = document.getElementById('cancelled-count');

    if (pendingElement) pendingElement.textContent = pendingCount.toString();
    if (confirmedElement) confirmedElement.textContent = confirmedCount.toString();
    if (completedElement) completedElement.textContent = completedCount.toString();
    if (cancelledElement) cancelledElement.textContent = cancelledCount.toString();
  }

  // Display appointments
  function displayAppointments() {
    const container = document.getElementById('appointments-list');
    if (!container) return;

    if (filteredAppointments.length === 0) {
      container.innerHTML = `
        <div class="text-center text-gray-500 dark:text-gray-400 py-8">
          <span class="text-4xl">ðŸ“…</span>
          <p class="mt-2">No appointments found</p>
        </div>
      `;
      return;
    }

    container.innerHTML = filteredAppointments.map(appointment => `
      <div class="bg-white dark:bg-slate-800 rounded-lg p-4 border border-gray-200 dark:border-gray-600">
        <div class="flex justify-between items-start mb-3">
          <div class="flex-1">
            <div class="flex items-center space-x-3 mb-2">
              <h4 class="font-semibold text-gray-900 dark:text-white text-lg">${appointment.name}</h4>
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(appointment.status)}">
                ${getStatusText(appointment.status)}
              </span>
            </div>
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
              <div>
                <p class="text-gray-600 dark:text-gray-400"><strong>Service:</strong> ${appointment.service}</p>
                <p class="text-gray-600 dark:text-gray-400"><strong>Date:</strong> ${formatDate(appointment.date)}</p>
                <p class="text-gray-600 dark:text-gray-400"><strong>Time:</strong> ${appointment.time}</p>
              </div>
              <div>
                <p class="text-gray-600 dark:text-gray-400"><strong>Email:</strong> ${appointment.email}</p>
                <p class="text-gray-600 dark:text-gray-400"><strong>Phone:</strong> ${appointment.phone}</p>
                <p class="text-gray-600 dark:text-gray-400"><strong>Message:</strong> ${appointment.message}</p>
              </div>
            </div>
          </div>
          <div class="flex flex-col space-y-2 ml-4">
            <button
              onclick="updateAppointmentStatus(${appointment.id}, 'confirmed')"
              class="text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 text-sm font-medium"
              ${appointment.status === 'confirmed' ? 'disabled' : ''}
            >
              Confirm
            </button>
            <button
              onclick="updateAppointmentStatus(${appointment.id}, 'completed')"
              class="text-green-600 hover:text-green-700 dark:text-green-400 dark:hover:text-green-300 text-sm font-medium"
              ${appointment.status === 'completed' ? 'disabled' : ''}
            >
              Complete
            </button>
            <button
              onclick="updateAppointmentStatus(${appointment.id}, 'cancelled')"
              class="text-red-600 hover:text-red-700 dark:text-red-400 dark:hover:text-red-300 text-sm font-medium"
              ${appointment.status === 'cancelled' ? 'disabled' : ''}
            >
              Cancel
            </button>
            <button
              onclick="sendReminder(${appointment.id})"
              class="text-purple-600 hover:text-purple-700 dark:text-purple-400 dark:hover:text-purple-300 text-sm font-medium"
            >
              Send Reminder
            </button>
          </div>
        </div>
      </div>
    `).join('');
  }

  // Get status color
  function getStatusColor(status: string) {
    switch (status) {
      case 'pending': return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';
      case 'confirmed': return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200';
      case 'completed': return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';
      case 'cancelled': return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';
      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';
    }
  }

  // Get status text
  function getStatusText(status: string) {
    switch (status) {
      case 'pending': return 'Pending';
      case 'confirmed': return 'Confirmed';
      case 'completed': return 'Completed';
      case 'cancelled': return 'Cancelled';
      default: return 'Unknown';
    }
  }

  // Format date
  function formatDate(dateString: string) {
    const date = new Date(dateString);
    return date.toLocaleDateString('en-US', { 
      weekday: 'long', 
      year: 'numeric', 
      month: 'long', 
      day: 'numeric' 
    });
  }

  // Update appointment status
  function updateAppointmentStatus(id: number, newStatus: string) {
    const appointmentIndex = appointments.findIndex(a => a.id === id);
    if (appointmentIndex === -1) return;

    appointments[appointmentIndex].status = newStatus;
    applyFilters(); // Reapply filters to update display
    showNotification(`Appointment status updated to ${newStatus}`, 'success');
  }

  // Send reminder
  function sendReminder(id: number) {
    const appointment = appointments.find(a => a.id === id);
    if (!appointment) return;

    // In production, this would send actual email/SMS
    showNotification(`Reminder sent to ${appointment.name}`, 'success');
  }

  // Apply filters
  function applyFilters() {
    const statusFilter = (document.getElementById('status-filter') as HTMLSelectElement)?.value;
    const serviceFilter = (document.getElementById('service-filter') as HTMLSelectElement)?.value;
    const dateFrom = (document.getElementById('date-from') as HTMLInputElement)?.value;
    const dateTo = (document.getElementById('date-to') as HTMLInputElement)?.value;

    filteredAppointments = appointments.filter(appointment => {
      // Status filter
      if (statusFilter && appointment.status !== statusFilter) return false;
      
      // Service filter
      if (serviceFilter && appointment.service !== serviceFilter) return false;
      
      // Date range filter
      if (dateFrom && appointment.date < dateFrom) return false;
      if (dateTo && appointment.date > dateTo) return false;
      
      return true;
    });

    displayAppointments();
  }

  // Clear filters
  function clearFilters() {
    const statusFilter = document.getElementById('status-filter') as HTMLSelectElement;
    const serviceFilter = document.getElementById('service-filter') as HTMLSelectElement;
    const dateFrom = document.getElementById('date-from') as HTMLInputElement;
    const dateTo = document.getElementById('date-to') as HTMLInputElement;

    if (statusFilter) statusFilter.value = '';
    if (serviceFilter) serviceFilter.value = '';
    if (dateFrom) dateFrom.value = '';
    if (dateTo) dateTo.value = '';

    filteredAppointments = [...appointments];
    displayAppointments();
  }

  // Show notification
  function showNotification(message: string, type: 'success' | 'error') {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 px-6 py-3 rounded-lg text-white font-medium z-50 ${
      type === 'success' ? 'bg-green-500' : 'bg-red-500'
    }`;
    notification.textContent = message;
    
    document.body.appendChild(notification);
    
    setTimeout(() => {
      notification.remove();
    }, 3000);
  }

  // Close appointment dashboard
  function closeAppointmentDashboard() {
    const modal = document.querySelector('.fixed.inset-0');
    if (modal) {
      modal.remove();
    }
  }

  // Load appointments when component mounts
  document.addEventListener('DOMContentLoaded', loadAppointments);
</script>
