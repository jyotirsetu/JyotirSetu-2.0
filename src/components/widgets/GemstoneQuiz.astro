---
// Gemstone Consultation Mini-Quiz
// Teaser quiz to engage users and suggest gemstone types
---

<script>
  // Type definitions
  interface Question {
    id: string;
    question: string;
    type: string;
    options: Array<{
      value: string;
      label: string;
      gemstones: string[];
    }>;
  }

  interface Answers {
    [key: string]: string | number | boolean;
  }

  // Gemstone Quiz Logic
  class GemstoneQuiz {
    questions: Question[];
    answers: Answers;

    constructor() {
      this.questions = [
        {
          id: 'birth-month',
          question: 'What is your birth month?',
          type: 'select',
          options: [
            { value: 'jan', label: 'January', gemstones: ['Garnet', 'Ruby'] },
            { value: 'feb', label: 'February', gemstones: ['Amethyst', 'Pearl'] },
            { value: 'mar', label: 'March', gemstones: ['Aquamarine', 'Bloodstone'] },
            { value: 'apr', label: 'April', gemstones: ['Diamond', 'Quartz'] },
            { value: 'may', label: 'May', gemstones: ['Emerald', 'Chrysoprase'] },
            { value: 'jun', label: 'June', gemstones: ['Pearl', 'Moonstone'] },
            { value: 'jul', label: 'July', gemstones: ['Ruby', 'Carnelian'] },
            { value: 'aug', label: 'August', gemstones: ['Peridot', 'Sardonyx'] },
            { value: 'sep', label: 'September', gemstones: ['Sapphire', 'Lapis Lazuli'] },
            { value: 'oct', label: 'October', gemstones: ['Opal', 'Tourmaline'] },
            { value: 'nov', label: 'November', gemstones: ['Topaz', 'Citrine'] },
            { value: 'dec', label: 'December', gemstones: ['Turquoise', 'Zircon'] }
          ]
        },
        {
          id: 'focus-area',
          question: 'Which area matters most to you?',
          type: 'select',
          options: [
            { value: 'love', label: 'ðŸ’• Love & Relationships', gemstones: ['Rose Quartz', 'Pink Tourmaline'] },
            { value: 'career', label: 'ðŸ’¼ Career & Success', gemstones: ['Citrine', 'Tiger Eye'] },
            { value: 'health', label: 'ðŸŒ¿ Health & Vitality', gemstones: ['Jade', 'Amethyst'] },
            { value: 'wealth', label: 'ðŸ’° Wealth & Abundance', gemstones: ['Pyrite', 'Green Aventurine'] }
          ]
        }
      ];
      
      this.answers = {};
      this.init();
    }
    
    init() {
      this.renderQuiz();
      this.attachEventListeners();
    }
    
    renderQuiz() {
      const container = document.getElementById('gemstone-quiz-container');
      if (!container) return;
      
      container.innerHTML = `
        <div class="bg-gradient-to-br from-purple-50 to-blue-50 dark:from-purple-900/20 dark:to-blue-900/20 rounded-xl p-6 border border-purple-200 dark:border-purple-700">
          <div class="text-center mb-6">
            <h3 class="text-2xl font-bold text-gray-900 dark:text-white mb-2">ðŸ’Ž Discover Your Perfect Gemstone</h3>
            <p class="text-gray-600 dark:text-gray-300">Take this quick quiz to find your ideal gemstone for healing and empowerment</p>
          </div>
          
          <div id="quiz-questions" class="space-y-6">
            ${this.questions.map((q: Question, index: number) => this.renderQuestion(q, index)).join('')}
          </div>
          
          <div class="text-center mt-6">
            <button 
              id="submit-quiz" 
              class="bg-purple-600 hover:bg-purple-700 text-white font-medium py-3 px-8 rounded-lg transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
              disabled
            >
              ðŸ”® Reveal My Gemstone
            </button>
          </div>
          
          <div id="quiz-result" class="hidden mt-6 p-6 bg-white dark:bg-slate-800 rounded-lg border border-purple-200 dark:border-slate-700">
            <!-- Result will be populated here -->
          </div>
        </div>
      `;
    }
    
    renderQuestion(question: Question, index: number) {
      if (question.type === 'select') {
        return `
          <div class="question-block">
            <label class="block text-lg font-semibold text-gray-900 dark:text-white mb-3">
              ${index + 1}. ${question.question}
            </label>
            <select 
              id="${question.id}" 
              class="w-full px-4 py-3 border border-gray-300 dark:border-slate-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent dark:bg-slate-700 dark:text-white"
              data-question="${question.id}"
            >
              <option value="">Select an option...</option>
              ${question.options.map((opt: { value: string; label: string; gemstones: string[] }) => `
                <option value="${opt.value}" data-gemstones="${opt.gemstones.join(',')}">
                  ${opt.label}
                </option>
              `).join('')}
            </select>
          </div>
        `;
      }
      return '';
    }
    
    attachEventListeners() {
      // Handle select changes
      this.questions.forEach((q: Question) => {
        const element = document.getElementById(q.id);
        if (element) {
          element.addEventListener('change', (e) => this.handleAnswer(e));
        }
      });
      
      // Handle submit
      const submitBtn = document.getElementById('submit-quiz');
      if (submitBtn) {
        submitBtn.addEventListener('click', () => this.showResult());
      }
    }
    
    handleAnswer(event: Event) {
      const target = event.target as HTMLSelectElement;
      const questionId = target.dataset.question;
      const selectedOption = target.options[target.selectedIndex];
      
      if (!questionId) return;
      if (selectedOption.value) {
        this.answers[questionId] = selectedOption.value;
      } else {
        delete this.answers[questionId];
      }
      
      this.updateSubmitButton();
    }
    
    updateSubmitButton() {
      const submitBtn = document.getElementById('submit-quiz');
      if (submitBtn) {
        const allAnswered = this.questions.every((q: Question) => this.answers[q.id]);
        (submitBtn as HTMLButtonElement).disabled = !allAnswered;
      }
    }
    
    showResult() {
      const resultContainer = document.getElementById('quiz-result');
      if (!resultContainer) return;
      
      const birthMonthValue = this.answers['birth-month'] as string;
      const focusAreaValue = this.answers['focus-area'] as string;
      
      // Find the selected options to get gemstones
      const birthMonthQuestion = this.questions.find(q => q.id === 'birth-month');
      const focusAreaQuestion = this.questions.find(q => q.id === 'focus-area');
      
      const birthMonthOption = birthMonthQuestion?.options.find(opt => opt.value === birthMonthValue);
      const focusAreaOption = focusAreaQuestion?.options.find(opt => opt.value === focusAreaValue);
      
      // Generate personalized recommendation
      const recommendation = this.generateRecommendation(birthMonthValue, focusAreaValue);
      
      resultContainer.innerHTML = `
        <div class="text-center">
          <div class="text-4xl mb-4">âœ¨</div>
          <h4 class="text-xl font-bold text-gray-900 dark:text-white mb-4">Your Personalized Gemstone Recommendation</h4>
          
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6">
            <div class="bg-purple-50 dark:bg-purple-900/20 p-4 rounded-lg">
              <h5 class="font-semibold text-purple-800 dark:text-purple-200 mb-2">Birth Month Gemstone</h5>
              <p class="text-purple-700 dark:text-purple-300">${birthMonthOption?.gemstones.join(' or ') || 'Your birth month gemstone'}</p>
            </div>
            <div class="bg-blue-50 dark:bg-blue-900/20 p-4 rounded-lg">
              <h5 class="font-semibold text-blue-800 dark:text-blue-200 mb-2">Focus Area Gemstone</h5>
              <p class="text-blue-700 dark:text-blue-300">${focusAreaOption?.gemstones.join(' or ') || 'Your focus area gemstone'}</p>
            </div>
          </div>
          
          <div class="bg-gradient-to-r from-green-50 to-emerald-50 dark:from-green-900/20 dark:to-emerald-900/20 p-4 rounded-lg mb-6">
            <h5 class="font-semibold text-green-800 dark:text-green-200 mb-2">ðŸ’¡ Expert Recommendation</h5>
            <p class="text-green-700 dark:text-green-300 text-sm">${recommendation}</p>
          </div>
          
          <div class="space-y-3">
            <button 
              onclick="window.location.href='/ScheduleAppointmentJyotirSetu'"
              class="w-full bg-purple-600 hover:bg-purple-700 text-white font-medium py-3 px-6 rounded-lg transition-colors duration-200"
            >
              ðŸ’Ž Book Full Gemstone Reading
            </button>
            <button 
              onclick="this.closest('#quiz-result').classList.add('hidden')"
              class="w-full bg-gray-200 hover:bg-gray-300 dark:bg-gray-700 dark:hover:bg-gray-600 text-gray-700 dark:text-gray-300 font-medium py-3 px-6 rounded-lg transition-colors duration-200"
            >
              Take Quiz Again
            </button>
          </div>
        </div>
      `;
      
      resultContainer.classList.remove('hidden');
    }
    
    generateRecommendation(_birthMonth: string, focusArea: string) {
      const recommendations: Record<string, string> = {
        'love': 'For love and relationships, combine your birth month gemstone with Rose Quartz for enhanced emotional healing and connection.',
        'career': 'For career success, pair your birth month gemstone with Citrine to boost confidence, creativity, and professional growth.',
        'health': 'For health and vitality, combine your birth month gemstone with Amethyst for physical healing and spiritual protection.',
        'wealth': 'For wealth and abundance, pair your birth month gemstone with Green Aventurine to attract prosperity and financial opportunities.'
      };
      
      return recommendations[focusArea] || 'Your personalized gemstone combination will provide optimal benefits for your specific needs.';
    }
  }
  
  // Initialize quiz when DOM is ready
  document.addEventListener('DOMContentLoaded', () => {
    new GemstoneQuiz();
  });
</script>

<!-- Gemstone Quiz Container -->
<div id="gemstone-quiz-container" class="my-8">
  <!-- Quiz will be rendered here -->
</div>
