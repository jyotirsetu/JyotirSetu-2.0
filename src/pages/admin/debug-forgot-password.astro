---
// Debug forgot password functionality
const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
const supabaseKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;

console.log('Forgot Password Debug Environment:');
console.log('PUBLIC_SUPABASE_URL:', supabaseUrl);
console.log('PUBLIC_SUPABASE_ANON_KEY:', supabaseKey ? 'Present' : 'Missing');
---

<html>
<head>
    <title>Forgot Password Debug</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .debug-section {
            background: white;
            padding: 20px;
            margin: 20px 0;
            border-radius: 8px;
            box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        .test-form {
            background: #f8f9fa;
            padding: 15px;
            border-radius: 5px;
            margin: 10px 0;
        }
        input, button {
            padding: 8px 12px;
            margin: 5px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        button {
            background: #007bff;
            color: white;
            cursor: pointer;
        }
        button:hover {
            background: #0056b3;
        }
        .result {
            margin-top: 10px;
            padding: 10px;
            border-radius: 4px;
        }
        .success {
            background: #d4edda;
            color: #155724;
            border: 1px solid #c3e6cb;
        }
        .error {
            background: #f8d7da;
            color: #721c24;
            border: 1px solid #f5c6cb;
        }
    </style>
</head>
<body>
    <h1>Forgot Password Debug Page</h1>
    
    <div class="debug-section">
        <h2>Environment Variables</h2>
        <p><strong>PUBLIC_SUPABASE_URL:</strong> {supabaseUrl || 'NOT FOUND'}</p>
        <p><strong>PUBLIC_SUPABASE_ANON_KEY:</strong> {supabaseKey ? 'Present (hidden for security)' : 'NOT FOUND'}</p>
    </div>

    <div class="debug-section">
        <h2>Test Forgot Password API</h2>
        <div class="test-form">
            <h3>Send Forgot Password Email</h3>
            <p><strong>Security Note:</strong> Reset links are now sent via email only. Check the server console for email details in development mode.</p>
            <input type="email" id="testEmail" placeholder="Enter test email" />
            <button onclick="testForgotPassword()">Test Forgot Password</button>
            <div id="forgotResult" class="result" style="display: none;"></div>
        </div>
    </div>

    <div class="debug-section">
        <h2>Test Reset Password with Token</h2>
        <div class="test-form">
            <h3>Reset Password</h3>
            <input type="text" id="resetToken" placeholder="Enter reset token" />
            <input type="password" id="newPassword" placeholder="Enter new password" />
            <button onclick="testResetPassword()">Test Reset Password</button>
            <div id="resetResult" class="result" style="display: none;"></div>
        </div>
    </div>

    <div class="debug-section">
        <h2>Console Logs</h2>
        <p>Check browser console for detailed debug information.</p>
        <button onclick="clearConsole()">Clear Console</button>
    </div>

    <script>
        console.log('Forgot Password Debug Page Loaded');
        console.log('Environment check:');
        console.log('PUBLIC_SUPABASE_URL:', import.meta.env.PUBLIC_SUPABASE_URL);
        console.log('PUBLIC_SUPABASE_ANON_KEY:', import.meta.env.PUBLIC_SUPABASE_ANON_KEY ? 'Present' : 'Missing');

        async function testForgotPassword() {
            const emailInput = document.getElementById('testEmail') as HTMLInputElement;
            const resultDiv = document.getElementById('forgotResult') as HTMLDivElement;
            const email = emailInput?.value;
            
            if (!email) {
                showResult('forgotResult', 'Please enter an email address', 'error');
                return;
            }

            try {
                console.log('Testing forgot password for:', email);
                const response = await fetch('/admin/api/forgot-password', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ email })
                });

                const data = await response.json();
                console.log('Forgot password response:', data);

                if (response.ok) {
                    showResult('forgotResult', `Success: ${data.message}`, 'success');
                    // Note: Reset links are now sent via email for security
                } else {
                    showResult('forgotResult', `Error: ${data.error}`, 'error');
                }
            } catch (error) {
                console.error('Forgot password test error:', error);
                showResult('forgotResult', `Network Error: ${error.message}`, 'error');
            }
        }

        async function testResetPassword() {
            const tokenInput = document.getElementById('resetToken') as HTMLInputElement;
            const passwordInput = document.getElementById('newPassword') as HTMLInputElement;
            const resultDiv = document.getElementById('resetResult') as HTMLDivElement;
            const token = tokenInput?.value;
            const newPassword = passwordInput?.value;
            
            if (!token || !newPassword) {
                showResult('resetResult', 'Please enter both token and new password', 'error');
                return;
            }

            try {
                console.log('Testing reset password with token:', token);
                const response = await fetch('/admin/api/reset-password-with-token', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ 
                        token, 
                        newPassword 
                    })
                });

                const data = await response.json();
                console.log('Reset password response:', data);

                if (response.ok) {
                    showResult('resetResult', `Success: ${data.message}`, 'success');
                } else {
                    showResult('resetResult', `Error: ${data.error}`, 'error');
                }
            } catch (error) {
                console.error('Reset password test error:', error);
                showResult('resetResult', `Network Error: ${error.message}`, 'error');
            }
        }

        function showResult(elementId: string, message: string, type: string) {
            const resultDiv = document.getElementById(elementId) as HTMLDivElement;
            if (resultDiv) {
                resultDiv.textContent = message;
                resultDiv.className = `result ${type}`;
                resultDiv.style.display = 'block';
            }
        }

        function clearConsole() {
            console.clear();
            console.log('Console cleared');
        }
    </script>
</body>
</html>
