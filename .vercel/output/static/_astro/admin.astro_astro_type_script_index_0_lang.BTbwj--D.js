let l=null;window.testLogin=j;window.handleLoginSubmit=c;window.togglePasswordVisibility=_;window.closeModal=w;window.getStoredPassword=m;window.updateStoredPassword=E;window.validateCurrentPassword=f;window.validateNewPassword=y;window.validatePasswordMatch=p;window.checkAllValidations=u;function M(){try{l=window.supabase.createClient("https://czbypbrrxxjcjdfjxczv.supabase.co","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImN6YnlwYnJyeHhqY2pkZmp4Y3p2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY5MjU2NDcsImV4cCI6MjA3MjUwMTY0N30.SQ-eabMNo5RBy8N0MHWDmlxVH7Tmh-EGykI0Qt5wDjg"),console.log("Supabase initialized successfully")}catch(e){console.error("Error creating Supabase client:",e)}}let g=null;function S(){localStorage.getItem("admin_password")?console.log("Password system initialized with existing password"):(console.log("No password found, setting default password"),localStorage.setItem("admin_password","JyotirSetu2024!"),console.log("Default password set: JyotirSetu2024!"))}function m(){return localStorage.getItem("admin_password")||"JyotirSetu2024!"}function E(e){localStorage.setItem("admin_password",e),console.log("Password updated successfully")}document.addEventListener("DOMContentLoaded",async function(){console.log("DOM Content Loaded - Initializing admin panel");try{S(),console.log("Password system initialized"),await M(),console.log("Supabase initialized successfully"),B(),console.log("Login form setup complete"),H(),console.log("Logout button setup complete"),J(),console.log("Change password button setup complete"),D(),console.log("Auth check complete"),T(),console.log("Event listeners setup complete"),console.log("Admin panel initialization complete!")}catch(e){console.error("Error during admin panel initialization:",e)}});function T(){const e=document.getElementById("daily-tips-card");e&&e.addEventListener("click",function(){window.location.href="/admin/dailytips",console.log("Navigating to Daily Tips Manager page")});const t=document.getElementById("horoscope-card");t&&t.addEventListener("click",function(){alert("Horoscope Manager - Coming Soon!"),console.log("Horoscope Manager clicked!")});const o=document.getElementById("appointment-card");o&&o.addEventListener("click",function(){window.location.href="/admin/appointmentdashboard",console.log("Navigating to Appointment Dashboard page")});const n=document.getElementById("blog-card");n&&n.addEventListener("click",function(){alert("Blog Manager - Coming Soon!"),console.log("Blog Manager clicked!")});const r=document.getElementById("image-card");r&&r.addEventListener("click",function(){alert("Image Manager - Coming Soon!"),console.log("Image Manager clicked!")});const s=document.getElementById("analytics-card");s&&s.addEventListener("click",function(){alert("Analytics Dashboard - Coming Soon!"),console.log("Analytics Dashboard clicked!")})}function D(){const e=localStorage.getItem("admin_email");e?(g={email:e},I(),P(),L()):k()}function k(){document.getElementById("login-page").classList.remove("hidden"),document.getElementById("admin-dashboard").classList.add("hidden")}function I(){document.getElementById("login-page").classList.add("hidden"),document.getElementById("admin-dashboard").classList.remove("hidden")}async function L(){try{await Promise.all([z(),A()]),N()}catch(e){console.error("Error loading dashboard data:",e)}}function N(){const e=document.getElementById("modal-container");e&&(e.innerHTML="");const t=document.querySelector("main");t&&(t.style.display="block")}async function z(){try{if(!l){console.log("Supabase not initialized, using default counts"),h();return}const{data:e,error:t}=await l.from("daily_tips").select("id",{count:"exact"});t?console.error("Error loading tips count:",t):document.getElementById("tips-count").textContent=e?.length||0;const{data:o,error:n}=await l.from("appointments").select("id",{count:"exact"});n?console.error("Error loading appointments count:",n):document.getElementById("appointments-count").textContent=o?.length||0,document.getElementById("horoscopes-count").textContent="0",document.getElementById("blog-count").textContent="0",console.log("Dashboard counts loaded successfully")}catch(e){console.error("Error loading dashboard counts:",e),h()}}function h(){document.getElementById("tips-count").textContent="0",document.getElementById("horoscopes-count").textContent="0",document.getElementById("appointments-count").textContent="0",document.getElementById("blog-count").textContent="0"}async function A(){const e=document.getElementById("recent-activity");if(e)try{if(!l){e.innerHTML=`
            <div class="text-center py-8">
              <span class="text-4xl">üåü</span>
              <p class="mt-2 text-gray-500 dark:text-gray-400">Loading recent activity...</p>
            </div>
          `;return}const{data:t,error:o}=await l.from("appointments").select("id, name, service_type, created_at").order("created_at",{ascending:!1}).limit(5),{data:n,error:r}=await l.from("daily_tips").select("id, title, created_at").order("created_at",{ascending:!1}).limit(3);let s='<div class="space-y-3">';t&&t.length>0&&t.forEach(a=>{const d=v(new Date(a.created_at));s+=`
              <div class="flex items-center space-x-3 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg">
                <div class="w-8 h-8 bg-green-100 dark:bg-green-900 rounded-full flex items-center justify-center">
                  <span class="text-green-600 dark:text-green-400 text-sm">üìÖ</span>
                </div>
                <div class="flex-1">
                  <p class="text-sm font-medium text-gray-900 dark:text-white">New appointment: ${a.name}</p>
                  <p class="text-xs text-gray-500 dark:text-gray-400">${a.service_type} ‚Ä¢ ${d}</p>
                </div>
              </div>
            `}),n&&n.length>0&&n.forEach(a=>{const d=v(new Date(a.created_at));s+=`
              <div class="flex items-center space-x-3 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg">
                <div class="w-8 h-8 bg-purple-100 dark:bg-purple-900 rounded-full flex items-center justify-center">
                  <span class="text-purple-600 dark:text-purple-400 text-sm">‚ú®</span>
                </div>
                <div class="flex-1">
                  <p class="text-sm font-medium text-gray-900 dark:text-white">Daily tip: ${a.title}</p>
                  <p class="text-xs text-gray-500 dark:text-gray-400">${d}</p>
                </div>
              </div>
            `}),s==='<div class="space-y-3">'&&(s+=`
            <div class="text-center py-8">
              <span class="text-4xl">üåü</span>
              <p class="mt-2 text-gray-500 dark:text-gray-400">No recent activity</p>
            </div>
          `),s+="</div>",e.innerHTML=s}catch(t){console.error("Error loading recent activity:",t),e.innerHTML=`
          <div class="text-center py-8">
            <span class="text-4xl">‚ö†Ô∏è</span>
            <p class="mt-2 text-gray-500 dark:text-gray-400">Error loading activity</p>
          </div>
        `}}function v(e){const o=Math.floor((new Date-e)/1e3);return o<60?"Just now":o<3600?`${Math.floor(o/60)} minutes ago`:o<86400?`${Math.floor(o/3600)} hours ago`:o<2592e3?`${Math.floor(o/86400)} days ago`:`${Math.floor(o/2592e3)} months ago`}function B(){console.log("Setting up login form...");const e=document.getElementById("login-form"),t=document.getElementById("login-submit-btn");e?(console.log("Login form found, setting up event listener"),e.removeEventListener("submit",c),e.addEventListener("submit",c,!0),t&&(t.removeEventListener("click",c),t.addEventListener("click",c),console.log("Submit button click listener added")),console.log("Login form event listener setup complete")):(console.error("Login form not found! Retrying in 500ms..."),setTimeout(()=>{B()},500))}function c(e){e.preventDefault(),console.log("=== LOGIN ATTEMPT STARTED ===");const t=document.getElementById("login-username"),o=document.getElementById("login-password"),n=document.getElementById("login-submit-btn"),r=document.getElementById("login-btn-text"),s=document.getElementById("login-btn-loading");if(console.log("Form elements found:",{usernameInput:!!t,passwordInput:!!o,submitBtn:!!n,btnText:!!r,btnLoading:!!s}),!t||!o){console.error("Missing form inputs!"),i("Form error: Missing input fields","error");return}const a=t.value.trim(),d=o.value.trim();if(console.log("Login attempt:",{username:a,passwordLength:d.length}),!a||!d){console.log("Empty credentials provided"),i("Please enter both username and password","error");return}n&&(n.disabled=!0,r&&r.classList.add("hidden"),s&&s.classList.remove("hidden")),console.log("Checking credentials...");const C=m();a==="admin"&&d===C?(console.log("‚úÖ LOGIN SUCCESSFUL!"),localStorage.setItem("admin_email",a),localStorage.setItem("admin_username",a),g={email:a,username:a},I(),P(),L(),i("Login successful! Welcome to JyotirSetu Admin","success")):(console.log("‚ùå LOGIN FAILED - Invalid credentials"),console.log("Expected: admin / [stored password]"),console.log("Received:",a,"/",d),i("Invalid credentials. Please check your username and password.","error")),n&&(n.disabled=!1,r&&r.classList.remove("hidden"),s&&s.classList.add("hidden")),console.log("=== LOGIN ATTEMPT COMPLETED ===")}function j(){console.log("üß™ TEST LOGIN FUNCTION CALLED");const e=document.getElementById("login-username"),t=document.getElementById("login-password");if(e&&t){const o=m();e.value="admin",t.value=o,console.log("‚úÖ Form auto-filled with correct credentials"),console.log("Using stored password:",o),setTimeout(()=>{c(new Event("submit"))},100)}else console.error("‚ùå Form inputs not found for test login"),i("Test login failed: Form inputs not found","error")}function w(){console.log("closeModal() called - this will close the modal");const e=document.getElementById("modal-container");e&&(e.innerHTML="",console.log("Modal closed"))}function _(e,t){const o=document.getElementById(e),n=document.getElementById(t);o&&n&&(o.type==="password"?(o.type="text",n.innerHTML=`
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.875 18.825A10.05 10.05 0 0112 19c-4.478 0-8.268-2.943-9.543-7a9.97 9.97 0 011.563-3.029m5.858.908a3 3 0 114.243 4.243M9.878 9.878l4.242 4.242M9.878 9.878L3 3m6.878 6.878L21 21"></path>
          `):(o.type="password",n.innerHTML=`
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
          `))}function F(){document.removeEventListener("keydown",b),document.addEventListener("keydown",b)}function b(e){e.key==="Escape"&&(console.log("Escape key pressed - closing modal"),w())}function f(){const e=document.getElementById("current-password"),t=document.getElementById("current-password-error"),o=m();if(!e||!t)return!1;const n=e.value;return n&&n!==o?(t.textContent="‚ùå Current password is incorrect",t.classList.remove("hidden"),!1):n&&n===o?(t.classList.add("hidden"),!0):(t.classList.add("hidden"),!1)}function y(){const e=document.getElementById("new-password"),t=document.getElementById("new-password-error"),o=document.getElementById("new-password-success");if(!e||!t||!o)return!1;const n=e.value;return n&&n.length<8?(t.textContent="‚ùå Password must be at least 8 characters long",t.classList.remove("hidden"),o.classList.add("hidden"),!1):n&&n.length>=8?(t.classList.add("hidden"),o.classList.remove("hidden"),!0):(t.classList.add("hidden"),o.classList.add("hidden"),!1)}function p(){const e=document.getElementById("new-password"),t=document.getElementById("confirm-password"),o=document.getElementById("confirm-password-error"),n=document.getElementById("confirm-password-success");if(!e||!t||!o||!n)return!1;const r=e.value,s=t.value;return s&&r!==s?(o.textContent="‚ùå Passwords do not match",o.classList.remove("hidden"),n.classList.add("hidden"),!1):s&&r===s?(o.classList.add("hidden"),n.classList.remove("hidden"),!0):(o.classList.add("hidden"),n.classList.add("hidden"),!1)}function u(){const e=f(),t=y(),o=p(),n=document.getElementById("update-password-btn");n&&(e&&t&&o?(n.disabled=!1,n.classList.remove("disabled:bg-gray-400","disabled:cursor-not-allowed")):(n.disabled=!0,n.classList.add("disabled:bg-gray-400","disabled:cursor-not-allowed")))}function P(){const e=document.getElementById("admin-welcome");e&&g&&(e.textContent=`Welcome, ${g.email}`)}function i(e,t){const o=document.createElement("div");o.className=`fixed top-4 right-4 px-6 py-3 rounded-lg text-white font-medium z-[999999] ${t==="success"?"bg-green-500":t==="error"?"bg-red-500":t==="info"?"bg-blue-500":"bg-gray-500"}`,o.textContent=e,document.body.appendChild(o),setTimeout(()=>{o.remove()},3e3)}function H(){const e=document.getElementById("logout-btn");e&&e.addEventListener("click",function(){localStorage.removeItem("admin_email"),localStorage.removeItem("admin_username"),g=null,k(),i("Logged out successfully","info")})}function J(){const e=document.getElementById("change-password-btn");e&&e.addEventListener("click",function(){V()})}function V(){console.log("Showing change password modal");const e=document.getElementById("modal-container");if(!e){console.error("Modal container not found!");return}e.innerHTML=`
        <div class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" id="change-password-modal-overlay">
          <div class="bg-white dark:bg-slate-800 rounded-xl p-8 max-w-md w-full mx-4">
            <div class="text-center mb-6">
              <span class="text-4xl">üîê</span>
              <h2 class="text-2xl font-bold text-gray-900 dark:text-white mt-2">Change Password</h2>
              <p class="text-gray-600 dark:text-gray-400">Update your admin password</p>
            </div>
            <form id="change-password-form" class="space-y-4">
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Current Password</label>
                <div class="relative">
                  <input type="password" id="current-password" required class="w-full px-3 py-2 pr-10 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent dark:bg-slate-700 dark:text-white" oninput="validateCurrentPassword()">
                  <button type="button" onclick="togglePasswordVisibility('current-password', 'current-password-toggle')" class="absolute inset-y-0 right-0 pr-3 flex items-center">
                    <svg id="current-password-toggle" class="h-5 w-5 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                  </button>
                </div>
                <div id="current-password-error" class="text-red-500 text-sm mt-1 hidden"></div>
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">New Password</label>
                <div class="relative">
                  <input type="password" id="new-password" required class="w-full px-3 py-2 pr-10 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent dark:bg-slate-700 dark:text-white" oninput="validateNewPassword()">
                  <button type="button" onclick="togglePasswordVisibility('new-password', 'new-password-toggle')" class="absolute inset-y-0 right-0 pr-3 flex items-center">
                    <svg id="new-password-toggle" class="h-5 w-5 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                  </button>
                </div>
                <div id="new-password-error" class="text-red-500 text-sm mt-1 hidden"></div>
                <div id="new-password-success" class="text-green-500 text-sm mt-1 hidden">‚úÖ Password strength is good</div>
              </div>
              <div>
                <label class="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">Confirm New Password</label>
                <div class="relative">
                  <input type="password" id="confirm-password" required class="w-full px-3 py-2 pr-10 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-purple-500 focus:border-transparent dark:bg-slate-700 dark:text-white" oninput="validatePasswordMatch()">
                  <button type="button" onclick="togglePasswordVisibility('confirm-password', 'confirm-password-toggle')" class="absolute inset-y-0 right-0 pr-3 flex items-center">
                    <svg id="confirm-password-toggle" class="h-5 w-5 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                    </svg>
                  </button>
                </div>
                <div id="confirm-password-error" class="text-red-500 text-sm mt-1 hidden"></div>
                <div id="confirm-password-success" class="text-green-500 text-sm mt-1 hidden">‚úÖ Passwords match</div>
              </div>
              <button type="submit" id="update-password-btn" class="w-full bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-lg font-medium transition-colors duration-200 disabled:bg-gray-400 disabled:cursor-not-allowed">
                Update Password
              </button>
            </form>
            <div class="mt-4 text-center space-y-2">
              <button id="cancel-password-btn" class="text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 px-4 py-2 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 transition-colors duration-200">
                Cancel
              </button>
              <div class="text-xs text-gray-400">
                <button onclick="console.log('Current stored password:', getStoredPassword())" class="text-blue-500 hover:text-blue-700 underline">
                  üîç Debug: Check Stored Password
                </button>
              </div>
            </div>
          </div>
        </div>
      `,setTimeout(()=>{O(),F()},100)}function O(){const e=document.getElementById("change-password-form"),t=document.getElementById("cancel-password-btn"),o=document.getElementById("update-password-btn");e?(console.log("Setting up change password form handler"),e.removeEventListener("submit",x),e.addEventListener("submit",x)):console.error("Change password form not found!"),t?(console.log("Setting up cancel button handler"),t.addEventListener("click",function(){console.log("Cancel button clicked - closing modal"),w()})):console.error("Cancel button not found!");const n=document.getElementById("current-password"),r=document.getElementById("new-password"),s=document.getElementById("confirm-password");n&&n.addEventListener("input",function(){f(),u()}),r&&r.addEventListener("input",function(){y(),p(),u()}),s&&s.addEventListener("input",function(){p(),u()}),o&&o.addEventListener("click",function(a){if(console.log("Update button clicked - testing form submission"),console.log("Form element:",e),console.log("Form submit event listener attached:",e?"Yes":"No"),e){const d=new Event("submit",{bubbles:!0,cancelable:!0});e.dispatchEvent(d)}}),setTimeout(()=>{u()},100)}function x(e){e.preventDefault(),console.log("Change password form submitted!");const t=document.getElementById("current-password").value,o=document.getElementById("new-password").value,n=document.getElementById("confirm-password").value;console.log("Change password attempt:",{currentPassword:t?"***":"empty",newPassword:o?"***":"empty",confirmPassword:n?"***":"empty"});const r=m();if(t!==r){console.log("Current password validation failed"),console.log("Expected:",r),console.log("Received:",t),i("Current password is incorrect","error");return}if(o.length<8){console.log("New password too short"),i("New password must be at least 8 characters long","error");return}if(o!==n){console.log("Password confirmation failed"),i("New passwords do not match","error");return}console.log("Password change successful!"),E(o),i("Password updated successfully! You can now use the new password to login.","success"),w()}
